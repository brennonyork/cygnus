## x.isalnum()
TABLE_NAME=BrennonsFlowSchema # Table name to give within Accumulo
TABLE_NAME=brennons_flowschema # Breaks with '_'
TABLE_NAME=brennons-flowschema # Breaks with '-'
TABLE_NAME=brennons+flowschema # Breaks with '+'
TABLE_NAME=brennons=flowschema # Breaks with '='
TABLE_NAME=brennons!flowschema # Breaks with '!'
TABLE_NAME=brennons@flowschema # Breaks with '@'
TABLE_NAME=brennons$flowschema # Breaks with '$'
TABLE_NAME=brennons%flowschema # Breaks with '%'
TABLE_NAME=brennons^flowschema # Breaks with '^'
TABLE_NAME=brennons&flowschema # Breaks with '&'
TABLE_NAME=brennons*flowschema # Breaks with '*'
TABLE_NAME=brennons(flowschema # Breaks with '('
TABLE_NAME=brennons)flowschema # Breaks with ')'

## x.isdigit() && int(x) && x > 0 && x <= 65535
SHARD_NUM=65535 # The upper limit
SHARD_NUM=65536 # Breaks the upper limit
SHARD_NUM=99999999 # Breaks the upper limit
SHARD_NUM=4294967297 # Breaks the upper limit and wraps over
SHARD_NUM=1 # Lower limit
SHARD_NUM=0 # Breaks the lower limit
SHARD_NUM=-12 # Breaks the lower limit
SHARD_NUM=-99999999 # Breaks the lower limit
SHARD_NUM=-4294967297 # Breaks the lower limit and wraps over

## x.isdigit() && int(x) && x > 0 && x <= 65535
THREAD_NUM=65535 # The upper limit
THREAD_NUM=65536 # Breaks the upper limit
THREAD_NUM=99999999 # Breaks the upper limit
THREAD_NUM=4294967297 # Breaks the upper limit and wraps over
THREAD_NUM=1 # Lower limit
THREAD_NUM=0 # Breaks the lower limit
THREAD_NUM=-12 # Breaks the lower limit
THREAD_NUM=-99999999 # Breaks the lower limit
THREAD_NUM=-4294967297 # Breaks the lower limit and wraps over

## x.isdigit() && int(x) && x > 0
RECORD_NUM = 4294967296 # The upper limit
RECORD_NUM = 4294967297 # Breaks the upper limit and wraps
RECORD_NUM = 1 # The lower limit
RECORD_NUM = 0 # Breaks the lower limit
RECORD_NUM=-12 # Breaks the lower limit
RECORD_NUM=-99999999 # Breaks the lower limit
RECORD_NUM=-4294967297 # Breaks the lower limit and wraps over

## x.isdigit() && int(x) && x > 0
HEADER_LEN = 52 # For SiLK we skip 52 bytes
HEADER_LEN = 4294967296 # The upper limit
HEADER_LEN = 4294967297 # Breaks the upper limit and wraps
HEADER_LEN = 1 # The lower limit
HEADER_LEN = 0 # Breaks the lower limit
HEADER_LEN=-12 # Breaks the lower limit
HEADER_LEN=-99999999 # Breaks the lower limit
HEADER_LEN=-4294967297 # Breaks the lower limit and wraps over

## os.access(x, os.R_OK)
LOCAL_INPUT_DIR=./binary/silk_repo # Legitimate directory
LOCAL_INPUT_DIR=./binary/silk_rep # Illegitimate directory

## os.access(x, os.W_OK)
LOCAL_OUTPUT_DIR=./output # Legitimate directory
LOCAL_OUTPUT_DIR=./outpu # Illegitimate directory

## os.path.isabs(x)
HDFS_INPUT_DIR=/data0/input # Legitimate path
HDFS_INPUT_DIR=/data0/inut^/\^\033/ # Illegitimate path

## os.path.isabs(x)
HDFS_OUTPUT_DIR=/data0/output # Legitimate path
HDFS_OUTPUT_DIR=/data0/inut^/\^\033/ # Illegitimate path

## os.path.isabs(x)
HDFS_OUTPUT_FAIL_DIR=/data0/fail # Legitimate path
HDFS_OUTPUT_DIR=/data0/inut^/\^\033/ # Illegitimate path

## x.isalpha()
USER=root
USER=4rg # Breaks by number
USER=htg^ # Breaks by special character
USER=$% dfg34 # Breaks by both special characters and numbers

## x.isalpha()
PASSWD=fccloud
PASSWD=4rg # Breaks by number
PASSWD=htg^ # Breaks by special character
PASSWD=$% dfg34 # Breaks by both special characters and numbers

## x (Unverified by Cygnus)
ZOO_SERVERS=rhelhad11

## x.isalpha()
ZOO_INSTANCE=fccloud
ZOO_INSTANCE=4rg # Breaks by number
ZOO_INSTANCE=htg^ # Breaks by special character
ZOO_INSTANCE=$% dfg34 # Breaks by both special characters and numbers

## os.access(x, os.R_OK)
AUGMENT_DIR=./augment
AUGMENT_DIR=./outpu # Illegitimate directory

%8[ts]%4[dur]             # Time-based fields
%2[sport]%2[dport] 	  # Ports
%1[proto] 		  # Protocol
%1[ct] 			  # class / flow type
%2[sensor] 		  # Senser
%1[flags]%1[init]%1[sess] # Flags
%1[attr]                  # Attributes
%2[appl]                  # Application
%2 			  # Unused
%2[in]%2[out] 		  # SNMP In and Out paths
%4[packets]%4[bytes] 	  # Flow details
%4[sip]%4[dip]%4[nhip] 	  # IPs

R:sip+dip CF:dip+dport+proto VAL:bytes+packets+"1"+dur
R:dip CF:sip+dport+proto VAL:bytes+packets+"1"+dur
R:dport CF:sip+dip CQ:proto VAL:bytes+packets
#R:sip CV:dip VAL:dur # <- This will break CV in Accumulo
#R:ts TS:ts VAL:appl
